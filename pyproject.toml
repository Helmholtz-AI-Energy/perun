[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "perun"
version = "0.8.10"
description = "Measure the energy used by your MPI+Python applications."
authors = [
    {name = "Gutiérrez Hermosillo Muriedas, Juan Pedro", email="juan.muriedas@kit.edu"}
]
maintainers = [
    {name = "Gutiérrez Hermosillo Muriedas, Juan Pedro", email="juan.muriedas@kit.edu"}
]
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["energy", "monitoring", "mpi", "python", "hpc", "command-line", "benchmarking"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Benchmark",
    "Topic :: System :: Hardware",
    "Topic :: System :: Distributed Computing",
    "Typing :: Typed",
]

requires-python = ">=3.9"

dependencies = [
    "py-cpuinfo>=5.0.0",
    "numpy>=1.20.0",
    "psutil>=5.9.0",
    "h5py>=3.5.9",
    "pandas>=1.3",
    "tabulate>=0.9",
]


[project.optional-dependencies]
nvidia = ["nvidia-ml-py>=12.535.77"]
mpi = ["mpi4py>=3.1"]
rocm = ["amdsmi>=6.2.0"]
docs = [
    "sphinx",
    "sphinx-autoapi",
    "furo",
]
dev = [
    # Testing
    "pytest",
    "coverage",
    "hypothesis~=6.100",

    # QA
    "pre-commit",

    # Releases and changelogs
    "python-semantic-release>=8.1.1",
    "build"
]

[project.urls]
Homepage = "https://github.com/Helmholtz-AI-Energy/perun"
Documentation = "https://perun.readthedocs.io"
Repository = "https://github.com/Helmholtz-AI-Energy/perun"
Issues = "https://github.com/Helmholtz-AI-Energy/perun/issues"
Changelog = "https://github.com/Helmholtz-AI-Energy/perun/blob/main/CHANGELOG.md"

[project.scripts]
perun = "perun.api.cli:cli"

# Semantic release
[tool.semantic_release]
build_command = "python -m build"
version_variables = [ "perun/__init__.py:__version__", "docs/conf.py:release" ]
version_toml = ["pyproject.toml:project.version"]
commit_message = "chore: {version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "main"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.branches.release-test]
match = "release-test"
prerelease_token = "rc"
prerelease = true

[tool.semantic_release.changelog]
template_dir = "templates"
chagelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.commit_parser_options]
allowed_tags = ["docs", "feat", "fix", "perf", "refactor"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0


[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.mypy]
python_version="3.9"
packages=["perun"]
exclude=[
    'tests/',
    'examples/'
]

plugins = ['numpy.typing.mypy_plugin']

disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs=true
warn_return_any=true
show_error_codes =true
warn_unused_ignores=true
follow_imports = "normal"
follow_untyped_imports = true

[[tool.mypy.overrides]]
module=[
    "perun.comm",
    "perun.backend.rocmsmi",
    "perun.backend.psutil",
    "perun.backend.powercap_rapl",
    "perun.backend.nvml"
]
warn_return_any= false
# ignore_missing_imports = true


# Ruff
[tool.ruff]
target-version = "py39"
exclude = ["docs", "examples"]

[tool.ruff.lint]
select = ["E", "F", "I", "D", "D417"]
ignore = ["E501"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
docstring-code-format = true

# Testing
[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.run]
source = ["perun"]
command_line = "-m pytest"

[tool.coverage.report]
format = "markdown"
